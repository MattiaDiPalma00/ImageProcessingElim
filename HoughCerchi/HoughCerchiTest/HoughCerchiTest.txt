#include <opencv2/opencv.hpp>

using namespace cv;
using namespace std;

int main(){

	Mat img = imread("monete.png",IMREAD_GRAYSCALE);
	
	imshow("src",img);
	waitKey(0);
	
	Mat gaussian;
	GaussianBlur(img,gaussian,Size(3,3),0,0);
	
	Mat canny;
	Canny(gaussian,canny,70,130,3);
	
	int r_min = 20 ;
	int r_max = 60;
	
	int size[] = {canny.rows,canny.cols,r_max-r_min+1};
	
	Mat votes(3,size,CV_32F);
	
	for(int x = 0 ; x < canny.rows ; x++){
		for(int y = 0 ; y < canny.cols ; y++){
			if(canny.at<uchar>(i,j) == 255){
				for(int r = r_min ; r<=r_max ; r++){
					for(int theta = 0 ; theta< 360  ; theta++){
						
						int a = y-r*(cos(theta*CV_PI/180));
						int b = x-r*(sin(theta*CV_PI/180));
						
						if( a >= 0 ; && a < canny.cols && b >= 0 ; && b < canny.rows)
							votes.at<float>(b,a,r-r_min)++;
					}
				}
			}
		}
	}
	for(int r = r_min ; r<=r_max ; r++){
		for(int b = 0 ; b < canny.rows ; b++){
			for(int a = 0 ; a < canny.cols ; a++){
				if(votes.at<float>(b,a,r-r_min) > 100){
					Point p(a,b);
					
					circle(img,p,3,Scalar(0),2,8,0);
					circle(img,p,r,Scalar(0),2,8,0);	
				
				}
			}
		}
	}

	imshow("cerchi",img);
	waitKey(0);
	
}